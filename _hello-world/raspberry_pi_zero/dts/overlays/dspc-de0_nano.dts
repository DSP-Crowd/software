// Overlay for base board
/dts-v1/;
/plugin/;

/ {
	compatible = "brcm,bcm2708";

	fragment@1 {
		target = <&gpio>;
		__overlay__ {
			eth_cs_pins: eth_cs_pins {
				brcm,pins = <8 23>;
				brcm,function = <1>; /* out */
			};

			de0_nano_cs_pins: de0_nano_cs_pins {
				brcm,pins = <12 16>;
				brcm,function = <1>; /* out */
			};
		};
	};

	fragment@2 {
		target = <&spi0>;
		__overlay__ {
			/* needed to avoid dtc warning */
			#address-cells = <1>;
			#size-cells = <0>;
			compatible = "brcm,bcm2835-spi";
			pinctrl-0 = <&spi0_pins &eth_cs_pins &de0_nano_cs_pins>;
			status = "okay";
			cs-gpios = <&gpio 8 1>, <&gpio 23 1>, <&gpio 12 1>, <&gpio 16 1>;

			flash0: epcs64@2{
				/* use compatible flash driver, see spi-nor.c:
				 * { "epcs64",           INFO(0, 0,  256 * 256, 128, 0) },
				 * { "m25p64-nonjedec",  INFO(0, 0,  64 * 1024, 128, 0) },
				 */
				compatible = "micron,m25p64-nonjedec", "spi-nor";
				reg = <2>; /* CE2 */
				spi-max-frequency = <12000000>;
				status = "okay";
			};

			user0: spidev@3{
				compatible = "spidev";
				reg = <3>;   /* CE3 */
				#address-cells = <1>;
				#size-cells = <0>;
				spi-max-frequency = <12000000>;
				status = "okay";
			};
		};
	};

	__overrides__ {
		mtd_speed = <&flash0>, "spi-max-frequency:0"; /* 32 bit integer parameter */
		user_speed = <&user0>, "spi-max-frequency:0"; /* 32 bit integer parameter */
	};
};
